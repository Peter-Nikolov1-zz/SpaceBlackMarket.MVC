@model SpaceBlackMarket.Models.SpaceTravelerModels.SpaceTravelerCreate

@{
    ViewBag.Title = "Create";
}

<h3>All new users are required to create a profile.</h3>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h5>We aren't asking for much, just some basic stuff. This is an illegal market after all.</h5>
        <br />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.TravelerAlias, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TravelerAlias, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TravelerAlias, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />

        <div class="form-group">
            @Html.LabelFor(model => model.WillingToCooperate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.WillingToCooperate)
                    @Html.ValidationMessageFor(model => model.WillingToCooperate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <br />

        <div class="form-group">
            @Html.LabelFor(model => model.WantedLevel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EnumDropDownListFor(model => model.WantedLevel)
                    @Html.ValidationMessageFor(model => model.WantedLevel, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <br />

        <div class="form-group">
            @Html.LabelFor(model => model.Credits, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Credits, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Credits, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (TempData.ContainsKey("ExceededProfileCount"))
        {
            <div class="alert alert-danger" role="alert" id="errorPopup">
                <button type="button" class="close" data-dismiss="alert">
                    <span>&times;</span>
                </button>
                @TempData["ExceededProfileCount"]
            </div>
        }
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<style>

    .form-control {
        background-color: whitesmoke;
    }

    .btn-default {
        color: black;
        background-color: white;
    }

        .btn-default:hover {
            color: white;
            background-color: gray;
        }

    #errorPopup {
        width: 300px;
    }
</style>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
